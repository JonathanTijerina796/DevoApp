#!/bin/bash

echo "üî• Configurando Firebase en DevoApp"
echo "=================================="

# Verificar que estemos en el directorio correcto
if [ ! -f "DevoApp.xcodeproj/project.pbxproj" ]; then
    echo "‚ùå Error: No se encontr√≥ el proyecto Xcode. Ejecuta este script desde el directorio ra√≠z del proyecto."
    exit 1
fi

echo ""
echo "üìã CONFIGURACI√ìN REQUERIDA EN FIREBASE CONSOLE:"
echo "=============================================="
echo ""
echo "1. üåê Crear/Configurar proyecto en Firebase Console:"
echo "   - Ir a: https://console.firebase.google.com/"
echo "   - Crear nuevo proyecto o seleccionar existente"
echo "   - Nombre sugerido: 'DevoApp'"
echo ""

echo "2. üì± Agregar app iOS:"
echo "   - Hacer clic en 'Add app' > iOS"
echo "   - Bundle ID: com.devoapp.DevoApp (o tu preferido)"
echo "   - App Nickname: DevoApp"
echo "   - ‚¨áÔ∏è  DESCARGAR GoogleService-Info.plist"
echo "   - üìÅ Guardar el archivo en: DevoApp/ (junto a los .swift files)"
echo ""

echo "3. üîê Configurar Authentication:"
echo "   - Ir a Authentication > Get started"
echo "   - Ir a 'Sign-in method'"
echo "   - Habilitar proveedores:"
echo "     ‚úÖ Email/Password"
echo "     ‚úÖ Google (se configura autom√°ticamente)"
echo "     ‚úÖ Facebook (requiere configuraci√≥n extra)"
echo ""

echo "4. üìò Configurar Facebook (opcional):"
echo "   - Ir a: https://developers.facebook.com/"
echo "   - Crear app o usar existente"
echo "   - Obtener App ID y App Secret"
echo "   - En Firebase Console > Authentication > Sign-in method > Facebook:"
echo "     - Pegar App ID y App Secret"
echo "     - Copiar OAuth redirect URI"
echo "   - En Facebook Developer Console:"
echo "     - Agregar OAuth redirect URI"
echo "     - Configurar Bundle ID en iOS settings"
echo ""

echo "5. üì¶ Configurar dependencias en Xcode:"
echo "   - Abrir DevoApp.xcodeproj"
echo "   - File > Add Package Dependencies"
echo "   - Agregar estos paquetes:"
echo ""
echo "   üî• Firebase iOS SDK:"
echo "   https://github.com/firebase/firebase-ios-sdk"
echo "   Seleccionar:"
echo "   - FirebaseAuth"
echo "   - FirebaseCore"
echo ""
echo "   üîç Google Sign-In:"
echo "   https://github.com/google/GoogleSignIn-iOS"
echo "   Seleccionar:"
echo "   - GoogleSignIn"
echo ""
echo "   üìò Facebook SDK (opcional):"
echo "   https://github.com/facebook/facebook-ios-sdk"
echo "   Seleccionar:"
echo "   - FacebookCore"
echo "   - FacebookLogin"
echo ""

echo "6. ‚öôÔ∏è  Configurar URL Schemes:"
echo "   - En Xcode, seleccionar proyecto DevoApp"
echo "   - Target DevoApp > Info > URL Types"
echo "   - Agregar URL Scheme para Google:"
echo "     - Identifier: GOOGLE_SIGN_IN"
echo "     - URL Scheme: (REVERSED_CLIENT_ID de GoogleService-Info.plist)"
echo "   - Para Facebook (si se usa):"
echo "     - Identifier: FACEBOOK"
echo "     - URL Scheme: fb[APP_ID]"
echo ""

echo "7. üèóÔ∏è  Agregar GoogleService-Info.plist al proyecto:"
echo "   - En Xcode, arrastrar GoogleService-Info.plist al proyecto"
echo "   - Asegurar que est√© marcado para el target DevoApp"
echo "   - Verificar que est√© en Build Phases > Copy Bundle Resources"
echo ""

echo "8. üéØ Configurar Info.plist:"
echo "   - Agregar estos entries al Info.plist:"
echo ""
echo "   <key>CFBundleURLTypes</key>"
echo "   <array>"
echo "       <dict>"
echo "           <key>CFBundleURLName</key>"
echo "           <string>GOOGLE_SIGN_IN</string>"
echo "           <key>CFBundleURLSchemes</key>"
echo "           <array>"
echo "               <string>[REVERSED_CLIENT_ID]</string>"
echo "           </array>"
echo "       </dict>"
echo "       <!-- Para Facebook (opcional) -->"
echo "       <dict>"
echo "           <key>CFBundleURLName</key>"
echo "           <string>FACEBOOK</string>"
echo "           <key>CFBundleURLSchemes</key>"
echo "           <array>"
echo "               <string>fb[APP_ID]</string>"
echo "           </array>"
echo "       </dict>"
echo "   </array>"
echo ""

echo "9. üß™ Verificar configuraci√≥n:"
echo "   - Compilar el proyecto (Cmd+B)"
echo "   - Ejecutar en simulador"
echo "   - Probar registro con email"
echo "   - Probar login con email"
echo "   - Probar login social (opcional)"
echo ""

echo "10. üåç Configurar localizaci√≥n (ya completado):"
echo "    ‚úÖ Archivos Localizable.strings creados"
echo "    ‚úÖ Strings localizados en ingl√©s y espa√±ol"
echo "    ‚úÖ NSLocalizedString implementado"
echo ""

echo "‚úÖ ARCHIVOS YA CREADOS:"
echo "======================"
echo "‚úÖ AuthenticationManager.swift - L√≥gica de autenticaci√≥n"
echo "‚úÖ Login.swift - UI actualizada con Firebase"
echo "‚úÖ ContentView.swift - Navegaci√≥n entre login/app"
echo "‚úÖ DevoAppApp.swift - Configuraci√≥n de Firebase"
echo "‚úÖ Localizable.strings (en/es) - Internacionalizaci√≥n"
echo ""

echo "üöÄ SIGUIENTE PASO:"
echo "=================="
echo "1. Seguir la configuraci√≥n en Firebase Console (pasos 1-4)"
echo "2. Descargar GoogleService-Info.plist"
echo "3. Configurar dependencias en Xcode (paso 5)"
echo "4. Agregar GoogleService-Info.plist al proyecto (paso 7)"
echo "5. Configurar URL schemes (paso 6)"
echo "6. ¬°Compilar y probar!"
echo ""

echo "üí° TIP: Una vez completada la configuraci√≥n,"
echo "    la app tendr√° funcionalidad completa de:"
echo "    - ‚úÖ Registro con email/password"
echo "    - ‚úÖ Login con email/password"
echo "    - ‚úÖ Login con Google"
echo "    - ‚úÖ Login con Facebook"
echo "    - ‚úÖ Localizaci√≥n EN/ES"
echo "    - ‚úÖ Manejo de errores"
echo "    - ‚úÖ Estados de carga"
